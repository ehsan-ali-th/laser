//===-- LaserInstPrinter.h - Convert Laser MCInst to assembly syntax ------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints an Laser MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_LASER_INSTPRINTER_LASERINSTPRINTER_H
#define LLVM_LIB_TARGET_LASER_INSTPRINTER_LASERINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class LaserInstPrinter : public MCInstPrinter {
public:
  LaserInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                   const MCRegisterInfo &MRI) :
  MCInstPrinter(MAI, MII, MRI) 
    {}

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, const MCSubtargetInfo &STI,
                        raw_ostream &O);
 public:
  static const char *getRegisterName(unsigned RegNo);

  void printRegName(raw_ostream &OS, unsigned RegNo) const override;
  void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot,
		 const MCSubtargetInfo &STI) override;
  bool printAliasInstr(const MCInst *MI, const MCSubtargetInfo &STI,
                       raw_ostream &O);
  void printCustomAliasOperand(const MCInst *MI, unsigned OpIdx,
			       unsigned PrintMethodIdx, raw_ostream &O);

 public:
  void printOperand(const MCInst *MI, unsigned OpNo, const MCSubtargetInfo &STI, raw_ostream &O);
  void printImm(const MCInst *MI, unsigned OpNo, const MCSubtargetInfo &STI, raw_ostream &O);
  void printUnsignedImm(const MCInst *MI, unsigned OpNo, const MCSubtargetInfo &STI, raw_ostream &O);

  void printAddrModeMemSrc(const MCInst *MI, unsigned OpNo, 
			   const MCSubtargetInfo &STI, raw_ostream &O);

  void printjmptarget11(const MCInst *MI, unsigned OpNo, const MCSubtargetInfo &STI, raw_ostream &O);


};
} // end namespace llvm

#endif
